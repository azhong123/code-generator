package ${basePackage}.${moduleName}.controller;

import ${basePackage}.api.${moduleName}.dto.${className}DTO;
import ${basePackage}.api.${moduleName}.mysql.${className};
import ${basePackage}.api.${moduleName}.vo.${className}VO;
import ${basePackage}.core.base.ResultResponse;
import ${basePackage}.core.util.validatedgroups.First;
import ${basePackage}.core.util.validatedgroups.Second;
import ${basePackage}.${moduleName}.service.${className}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.AllArgsConstructor;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.data.domain.Page;

/**
 * ${tableComment} 信息操作处理
 *
 * @author : ${author}
 * @create : ${datetime}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/api/${moduleName}/${classname}")
@Api(value = "${tableComment}", tags = "${tableComment}")
public class ${className}Controller {

    private final ${className}Service ${classname}Service;

    /**
     * 分页查询${tableComment} 列表
     *
     * @param currentPage 第几页开始
     * @param pageSize    每页数量
     * @return
     */
    @PostMapping("/list")
    @ApiOperation(value = "分页查询${tableComment}", notes = "分页查询${tableComment}")
    public ResultResponse<Page<${className}>> list(@RequestParam("currentPage") Integer currentPage, @RequestParam("pageSize") Integer pageSize) {
        Page<${className}> list = ${classname}Service.select${className}List(currentPage, pageSize);
        return ResultResponse.ok(list);
    }

    /**
     * 新增${tableComment}
     *
     * @param vo 请求对象
     * @return
     */
    @PostMapping("/add")
    @ApiOperation(value = "新增${tableComment}", notes = "新增${tableComment}")
    public ResultResponse<${className}DTO> addSave(@RequestBody @Validated(First.class) ${className}VO vo) {
        return ResultResponse.ok(${classname}Service.insert${className}(vo));
    }

    /**
     * 修改${tableComment}
     *
     * @param vo 请求对象
     * @return
     */
    @PostMapping("/edit")
    @ApiOperation(value = "修改${tableComment}", notes = "修改${tableComment}")
    public ResultResponse<${className}DTO> editSave(@RequestBody @Validated(Second.class) ${className}VO vo) {
        return ResultResponse.ok(${classname}Service.update${className}(vo));
    }

    /**
     * 删除${tableComment}
     *
     * @param id
     * @return
     */
    @PostMapping("/remove")
    @ApiOperation(value = "删除${tableComment}", notes = "删除${tableComment}")
    public ResultResponse remove(@RequestParam String... id) {
        return ResultResponse.ok(${classname}Service.delete${className}ByIds(id));
    }

}
