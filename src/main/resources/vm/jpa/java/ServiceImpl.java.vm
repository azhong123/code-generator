package ${package}.service.impl;

import java.util.ArrayList;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.PageRequest;
import ${package}.dao.${className}Repository;
import ${package}.domain.${className};
import ${package}.service.I${className}Service;
import com.code.generator.common.core.text.Convert;

/**
 * ${tableComment} 服务层实现
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Service
public class ${className}ServiceImpl implements I${className}Service{

	@Autowired
	private ${className}Repository ${classname}Repository;

	/**
     * 查询${tableComment}信息
     * 
     * @param ${primaryKey.attrname} ${tableComment}ID
     * @return ${tableComment}信息
     */
    @Override
	public ${className} select${className}ById(${primaryKey.attrType} ${primaryKey.attrname}){
	    return ${classname}Repository.select${className}ById(${primaryKey.attrname});
	}
	
	/**
     * 分页查询${tableComment}列表
     * 
     * @param currentPage 		第几页开始
	 * @param pageSize 			每页数量
     * @return ${tableComment}集合
     */
	@Override
	public Page<${className}> select${className}List(Integer currentPage, Integer pageSize){
        // spring boot 2.0推荐写法
        Pageable pageable = PageRequest.of(currentPage,pageSize);
        // spring boot 2.0 以前，2.0版本也适用，但是2.0版本推荐使用上面的方式
        // Pageable pageable = new PageRequest(currentPage,pageSize);
	    return ${classname}Repository.select${className}List(pageable);
	}

    /**
     * 查询${tableComment}列表
     *
     * @return ${tableComment}集合
     */
    public List<${className}> selectAll${className}(){
        return ${classname}Repository.findAll();
    }

	
    /**
     * 新增${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public int insert${className}(${className} ${classname}){
		${className} result = ${classname}Repository.save(${classname});
        return result != null ? 1 : 0;
	}
	
	/**
     * 修改${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public int update${className}(${className} ${classname}){
		${className} result = ${classname}Repository.save(${classname});
        return result != null ? 1 : 0;
	}

	/**
     * 删除${tableComment}对象
     * 
     * @param ids 需要删除的数据ID
     * @return 结果
     */
	@Override
	public int delete${className}ByIds(String ids){
        String[] stuList = Convert.toStrArray(ids);
        List<${primaryKey.attrType}> ${primaryKey.attrname}List = new ArrayList<${primaryKey.attrType}>();
        if (stuList != null && stuList.length > 0) {
            for (String str : stuList) {
				${primaryKey.attrname}List.add(new ${primaryKey.attrType}(str));
            }
        }
		return ${classname}Repository.delete${className}ByIds(${primaryKey.attrname}List);
	}
	
}
